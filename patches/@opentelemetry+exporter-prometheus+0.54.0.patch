diff --git a/node_modules/@opentelemetry/exporter-prometheus/build/src/PrometheusExporter.js b/node_modules/@opentelemetry/exporter-prometheus/build/src/PrometheusExporter.js
index 71d19ff..28619ff 100644
--- a/node_modules/@opentelemetry/exporter-prometheus/build/src/PrometheusExporter.js
+++ b/node_modules/@opentelemetry/exporter-prometheus/build/src/PrometheusExporter.js
@@ -19,10 +19,11 @@ exports.PrometheusExporter = void 0;
 const api_1 = require("@opentelemetry/api");
 const core_1 = require("@opentelemetry/core");
 const sdk_metrics_1 = require("@opentelemetry/sdk-metrics");
-const http_1 = require("http");
+// const http_1 = require("http");
 const PrometheusSerializer_1 = require("./PrometheusSerializer");
 /** Node.js v8.x compat */
-const url_1 = require("url");
+import { URL as url_1 } from 'react-native-url-polyfill';
+
 class PrometheusExporter extends sdk_metrics_1.MetricReader {
     // This will be required when histogram is implemented. Leaving here so it is not forgotten
     // Histogram cannot have a attribute named 'le'
@@ -91,7 +92,7 @@ class PrometheusExporter extends sdk_metrics_1.MetricReader {
                 ? config.appendTimestamp
                 : PrometheusExporter.DEFAULT_OPTIONS.appendTimestamp;
         // unref to prevent prometheus exporter from holding the process open on exit
-        this._server = (0, http_1.createServer)(this._requestHandler).unref();
+        // this._server = (0, http_1.createServer)(this._requestHandler).unref();
         this._serializer = new PrometheusSerializer_1.PrometheusSerializer(this._prefix, this._appendTimestamp);
         this._baseUrl = `http://${this._host}:${this._port}/`;
         this._endpoint = (config.endpoint || PrometheusExporter.DEFAULT_OPTIONS.endpoint).replace(/^([^/])/, '/$1');
